---
# Source: jupyterhub/templates/hub/secret.yaml
kind: Secret
apiVersion: v1
metadata:
  name: hub
  labels:
    component: hub
    app: jupyterhub
    release: jhub
    chart: jupyterhub-1.1.2
    heritage: Helm
type: Opaque
data:
  values.yaml: ""

  # Any JupyterHub Services api_tokens are exposed in this k8s Secret as a
  # convinience for external services running in the k8s cluster that could
  # mount them directly from this k8s Secret.

  # During Helm template rendering, these values that can be autogenerated for
  # users are set using the following logic:
  #
  # 1. Use chart configuration's value
  # 2. Use k8s Secret's value
  # 3. Use a new autogenerated value
  #
  # hub.config.ConfigurableHTTPProxy.auth_token: for hub to proxy-api authorization (JupyterHub.proxy_auth_token is deprecated)
  # hub.config.JupyterHub.cookie_secret:         for cookie encryption
  # hub.config.CryptKeeper.keys:                 for auth state encryption
  #
  hub.config.ConfigurableHTTPProxy.auth_token: "U1FVdWpEeWxDMUJ6YlBWVXZmcWF6WkU4VW0zOE9NWlZTcEdGQ2ZVdXBRQjRDVTMzTkRHaXZqRTEyNDgzWHNXUQ=="
  hub.config.JupyterHub.cookie_secret: "MDNhNDQwNmIwZDI5NDQ0N2ZjZjg0OGVlZWU2ZmU4NDBhZDVlODk2OGI0YzNmNTE0MjZjMDg0NmE1NmY0MDkwNw=="
  hub.config.CryptKeeper.keys: "N2ZkNTlhYjBkNzlmNjE0YWY5YTYyNzM3NjdjYmQwM2M4YzcxMzQ2M2ZkM2U4ZDFkMTExZjBiMjg0M2ZiNjZhYQ=="
